@model PagedList.IPagedList<Projet2020.Models.Produits>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>List of our products</h2>
@if (Session["id"] != null && int.Parse(Session["id"].ToString()) == 1)
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

@using (Html.BeginForm("Index", "Produits", FormMethod.Get))
{
    <p>
        Find by name : @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name Prodcuct", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.fnameSortParm })
        </th>
        <th>
            Stock
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name_produits)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)€
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stk) de stock
            </td>
            @if (Session["id"] != null && int.Parse(Session["id"].ToString()) == 1)
            {
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id_prod }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id_prod }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id_prod })
                </td>
            }
            @if(Session["id"] != null)
            {
                 <td>
                    <button class="btn btn-success">@Html.ActionLink("Buy","Add", new { id = item.Id_prod })</button>
                 </td>
            }
            

        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
